:root {
    --dark: #272D38;
    --light: #FFF;
    --primary-color: #8EADD5;
    --primary-color-dark: #3f3f3f;
    --gray: #F6F6F6;
}

body {
    font-family: 'Inter', sans-serif;
    color: var(--dark);
    text-align: center;
    margin: 0;
    background-image: radial-gradient(circle at left top, rgb(142 173 213 / .3), transparent 400px),
    radial-gradient(circle at right center,rgb(142 173 213 / .3), transparent 400px);
}

.content-wrapper-center {
    padding: 3rem 1rem 2rem;
    max-width: 67.25rem;
    margin: auto;
}
.imagem{
    text-align: center;
}

.hero_title{
    margin-top: 0;
}

.header-menu {
    list-style-type: none;
    padding: 0;
    text-align: right;

    /* display: none; */
}
.header-menu li{
    padding: .25em 0;
}

.header-menu a {
    display: block;
    padding: 1.75em 0;

}

a {
    color: inherit;
}

nav a {
    text-decoration: none;
}

h1 {
    font-size: 2.5rem;
}

h2 {
    font-size: 2rem;
}

.header {
    text-align: left;
}

.btn {
    display: inline-block;
    text-decoration: none;
    padding: 1em;
    background-color: var(--primary-color);
    border-radius: 5px;
    color: var(--light);
}

.btn:hover,
.btn:focus {
    background-color: var(--primary-color-dark);
}

img {
    max-width: 100%;
}

.brands{
    text-align: center;
}

.brands h2 {
    font-size: 1rem;
    font-weight: lighter;
    color: #667085;
}

.brands ul {
    list-style-type: none;
    padding: 0;
    background-color: var(--gray);
    border-radius: 5px;
    padding: 1em;

    display: flex;
    justify-content: space-around;
    gap: 1rem;
}

.hide {
    position: absolute;
    clip: rect(1px, 1px, 1px, 1px);
    padding: 0;
    border: 0;
    height: 1px;
    width: 1px;
    overflow: hidden;
}

.testemunho {
    background-color: var(--gray);
    border-radius: 5px;
    padding: 1rem;

    container: testemunhoCard/inline-size;
}
.testemunho_thumb{
    width: 8.125rem;
    height: 8.125rem;
}

.contato {
    background-color: var(--gray);
    border-radius: 5px;
    padding: 1rem;
    margin-top: 4rem;
}

.contato_image {
    display: none;
}

.footer {
    background-color: var(--gray);
}

.footer ul {
    list-style-type: none;
    padding: 0;
}

.footer a {
    text-decoration: none;
}

.logo {
    text-transform: uppercase;
    text-decoration: none;
    font-weight: bold;
    font-size: 1.2rem;
}

.copyright {
    /*A propriedade white-space do CSS é usada para controlar como os espaços em branco dentro de um elemento HTML são tratados. Ela define como o navegador deve lidar com espaços, quebras de linha e tabulações no conteúdo de texto.
    normal: (Padrão) Espaços em branco extras são colapsados e quebras de linha são permitidas.
    nowrap: Impede a quebra de linha automática (todo o texto fica em uma linha).
    pre: Respeita todos os espaços e quebras de linha (como em <pre> no HTML).
    pre-wrap: Respeita os espaços e quebras de linha e permite a quebra automática de linha se o conteúdo for muito grande.
    pre-line: Remove espaços em branco extras, mas mantém quebras de linha manuais (\n).*/
    white-space: nowrap;
}

.hero,
.brands,
.branding,
.testemunhos,
.contato {
    margin-top: 6rem;
    margin-bottom: 6rem;
}

.row{
    display: grid;
    grid-template-columns: repeat(12,1fr);
    gap: .5rem;
    /*O grid-auto-flow é uma propriedade do CSS Grid que define como os itens são automaticamente colocados no grid quando você não especifica suas posições.
    Valores principais:
    row (padrão): os itens são colocados linha por linha, da esquerda para a direita.
    column: os itens são colocados coluna por coluna, de cima para baixo.
    dense: tenta preencher espaços vazios no grid com os itens seguintes (pode mudar a ordem visual).*/
    grid-auto-flow: dense;
}

.row.testemunhos_wrapper{
    row-gap: 3rem;
}

.row.contato{
    padding-top: 4rem;
    padding-top: 4rem;
}

.contato_title{
    margin-top: 0;
}

.row > .sm-12{
    grid-column: 1/-1;
}
.testemunho_card{
    display: flex;
    /* align-items: center; */
    gap: 1rem;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.icons li{
    display: inline-block;
    font-size: 2rem;
}

.icons li + li{
    margin-left: 1rem;
}

@container testemunhoCard (min-width: 42.187em){
    .testemunho_card{
        flex-direction: row;
        text-align: left;
    }
}

@media screen and (min-width: 46.25em) {
    body{
        text-align: left;
    }
    h1 {
        font-size: 3.625rem;
    }
    
    h2 {
        font-size: 2.875rem;
    }
    .header{
        align-items: center;
    }
    .menu-icon, .menu-btn{
        display: none;
    }
    
    .header-menu{
        /* display: block; */
        margin: 0;
    }
    .header-menu li{
        display: inline-block;
        margin-left: 1.75rem;
    }
    .header-menu a{
        padding: 1rem;
    }
    
    .contato_image{
        display: block;
        text-align: center;
    }
    .row{
        gap: 1rem;
    }
    .row > .md-3{
        grid-column: span 3;
    }
    .row > .md-4{
        grid-column: span 4;
    }
    .row > .md-6{
        grid-column: span 6;
    }
    .row > .md-9{
        grid-column: span 9;
    }
    .row > .md-1-6{
        grid-column: 1/7;
    }
    .row > .md-7-12{
        grid-column: 7/13;
    }
}
@media screen and (min-width: 90em) {
    .hero_title{
        margin-bottom: 6.25rem;
    }
    
    .row{
        gap: 3rem;
    }
    .row > .lg-3{
        grid-column: span 3;
    }
    .row > .lg-4{
        grid-column: span 4;
    }
    .row > .lg-5{
        grid-column: span 5;
    }
    .row > .lg-6{
        grid-column: span 6;
    }
    .row > .lg-7{
        grid-column: span 7;
    }
    .row > .lg-1-5{
        grid-column: 1/6;
    }
    .row > .lg-1-7{
        grid-column: 1/8;
    }
    .row > .lg-8-12{
        grid-column: 8/13;
    }
}

/*Hamburguer menu*/
.header{
    display: flex;
    justify-content: space-between;
}
.header-menu{
    position: absolute;
    left: 0;
    right: 0;
    top: 100px;
    max-height: 0;
    overflow: hidden;
    background-color: white;

    transition: max-height .3s;
    margin: 0;
    padding-right: 1rem;
    padding-left: 1rem;
}

/*O seletor :focus-within é uma pseudo-classe CSS que aplica estilos a um elemento quando ele ou qualquer um de seus descendentes recebe foco (como ao clicar em um campo de formulário ou usar a tecla Tab).
Diferença do :focus:
:focus se aplica apenas ao elemento que recebe o foco diretamente.
:focus-within se aplica ao elemento pai assim que qualquer filho recebe o foco.*/
.header-menu:focus-within{
    max-height: 100vh;
}
.menu-btn:checked ~ .header-menu{
    max-height: 100vh;
}
.menu-btn:checked+.menu-icon .nav-icon{
    background-color: transparent;
}
@media screen and (min-width: 46.25em) {
    .header-menu{
        position: static;
        max-height: initial;
        background-color: initial;
    }
}

.header nav{
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}
.menu-icon{
    position: relative;
    cursor: pointer;
    height: 24px;
}
.nav-icon{
    background-color: #333;
    display: inline-block;
    height: 2px;
    width: 24px;
    position: relative;
}
.nav-icon::after,.nav-icon::before{
    content: "";
    background-color: #333;
    display: inline-block;
    height: 2px;
    width: 24px;
    position: absolute;
    transition: transform .2s;
}
.nav-icon::after{
    transform: translateY(8px);
}
.nav-icon::before{
    transform: translateY(-8px);
}
.menu-btn:checked + .menu-icon .nav-icon::before{
    transform: rotate(-45deg);
}
.menu-btn:checked + .menu-icon .nav-icon::after{
    transform: rotate(45deg);
}
/*A pseudo-classe :focus-visible é usada em CSS para aplicar estilos apenas quando um elemento está focado e o foco é visível ao usuário, ou seja, quando o foco foi obtido de uma forma que normalmente requer indicação visual, como através do teclado (ex: tecla Tab), e não com o mouse.*/
.menu-btn:focus-visible + .menu-icon{
    outline: 2px solid black;
    /*A propriedade outline-offset em CSS é usada para definir a distância entre a borda do elemento e o contorno (outline).
    Ela é especialmente útil quando você quer destacar um elemento com um contorno, mas quer que esse contorno fique separado da borda (em vez de colado nela).*/
    outline-offset: 3px;
}