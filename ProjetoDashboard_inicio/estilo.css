:root{
    --primary-color: #004EDA;
    --grey: #f2f2f8;
    --default-padding: 2rem;
    --black: #111;
    --color-text: #5a5a5f;
    --middle-padding:calc(var(--default-padding)/2);
}

body{
    font-family: "Poppins", sans-serif;
    color: var(--color-text);
    display: grid;
    grid-template-columns: max-content 1fr;
    /* grid-template-rows: 64px auto; */
    grid-template-rows: 4rem minmax(calc(100vh - 4rem), auto );
    margin: 0;
}
img{
    max-width: 100%;
}
.mainNav{
    grid-row: 1/-1;
    grid-column: 1/2;
    background-color: white;
    display: flex;
    flex-direction: column;
    max-height: 100vh;
    position: sticky;
    top: 0;
    /* padding-right: var(--default-padding); */
}
.topnav{
    grid-row: 1/2;
    grid-column: 2/-1;
    background-color: white;
    display: flex;
    justify-content: space-between;
    align-items: center;
}
main{
    grid-row: 2/-1;
    grid-column: 2/-1;
    background-color: var(--grey);

    display: grid;
    gap: var(--default-padding);
    grid-template-columns: 1fr 1fr;

    /*grid-auto-rows define a altura das linhas automáticas em um grid CSS.Ou seja, quando você cria um grid com mais itens do que linhas definidas, o navegador cria novas linhas automaticamente — e grid-auto-rows diz qual altura essas novas linhas devem ter.
    Valore:
    auto: A altura da linha se ajusta ao conteúdo.
    min-content:A menor altura possível sem quebrar o conteúdo (ex: uma palavra grande ainda cabe).
    max-content: A maior altura que o conteúdo pode ocupar sem quebrar (tudo em uma linha ou bloco inteiro).
    minmax(min, max): Define um intervalo flexível entre um valor mínimo e máximo.

    O fit-content(valor)Ajuste ao tamanho do conteúdo, mas não ultrapasse o valor que eu coloquei.
    Se o conteúdo da célula precisa de 50px, a linha terá 50px.
    Se o conteúdo precisa de 120px, a linha terá 120px.
    Se o conteúdo precisa de 300px, a linha será limitada a 150px (porque esse é o máximo que você permitiu).*/
    grid-auto-rows: min-content;

    padding: var(--default-padding);
}

main > *{
    grid-column: span 2;
}

main > .grid-half{
    grid-column: span 1;
}

main > figure{
    margin: 0;
}

.mainNav_linkLogo{
    padding-left: var(--default-padding);
    padding-top: var(--default-padding);
    color: var(--black);
    text-decoration: none;
    text-transform: uppercase;
    font-size: 1.5rem;
    display: inline-block;
    padding-right: var(--default-padding);
}
.mainNav_menu,.topnav_menu{
    list-style-type: none;
    margin: 0;
    padding: 0;
    padding-left: var(--default-padding);
}
.mainNav_menu{
    padding-right: var(--default-padding);
}
.mainNav_menu a,.topnav_menu a{
    text-decoration: none;
    color: #5a5a5f;
}
.mainNav_menu svg,.topnav_menu svg{
    vertical-align: bottom;
}
.topnav_menu{
    display: flex;
    gap: var(--default-padding);
}
.mainNav_menus{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-grow: 1;
    padding-top: var(--default-padding);
}
.mainNav_menu li{
    margin-top: 1rem;
}
.mainNav_menu:last-child{
    padding-bottom: var(--default-padding);
}
.mainNav_menu:not(:last-child){
    border-bottom: 1px solid var(--grey);
    padding-bottom: var(--default-padding);
}
.perfil{
    margin-left: var(--default-padding);
    display: flex;
    height: 100%;
    align-items: center;
}
.perfil_thumb{
    height: 100%;
    padding-top: .5rem;
    padding-bottom: .5rem;
    margin-right: var(--middle-padding);
    box-sizing: border-box;
}
.perfil_thumb img{
    height: 100%;
}
.perfil_name{
    font-size: .8rem;
    font-weight: 600;
    color: var(--black);
}
.perfil_rule{
    font-size: .7rem;
    font-weight: 500;
    text-transform: uppercase;
    color: color-mix(in srgb, var(--black),transparent 60%);
}
.summary{
    display: flex;
    background-color: white;
    align-items: center;
    justify-content: space-between;
    padding: var(--middle-padding) var(--default-padding);
    border-radius: 4px;
}
.summary article{
    padding: var(--middle-padding) 0;
}
.summary_number{
    font-size: 1.2rem;
    color: var(--primary-color);
    font-weight: 600;
    margin-left: var(--middle-padding);
}
.summary_sepatated{
    width: 2px;
    background-color: var(--grey);
    align-self: stretch;
}
.btn{
    background-color: var(--primary-color);
    color: white;
    text-decoration: none;
    border-radius: 4px;
    padding: calc(var(--middle-padding)/2) var(--default-padding);
}
.summary_btn{
    align-self: stretch;
    display: flex;
    align-items: center;
}