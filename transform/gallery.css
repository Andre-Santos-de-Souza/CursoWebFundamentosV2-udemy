
*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body{
    font-family: sans-serif;
    display: flex;
    gap: 2em;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    min-height: 100vh;
    background-color: rgb(188, 197, 197);
}

img{
    max-width: 100%;
    display: block;
}

.gallery{
    width: 60rem;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: .5em;
    background-color: white;
    padding: .5em;
    box-shadow: 0 0 14px 2px rgba(0,0,0, .5);
}
.gallery .image{
    flex-basis: calc(25% - .5em);
    position: relative;
    overflow: hidden;
    flex-grow: 1;
}
.image a{
    text-decoration: none;
}
.gallery p{
    background-color: rgba(0,0,0,.8);
    color: white;
    text-transform: uppercase;
    padding: 1em;
    letter-spacing: 2px;
    font-size: .75em;
    position: absolute;
    bottom: 0;
    width: 100%;
    opacity: .2;
    transform: translateY(100%);
    transition: all .5s ease-in-out;
}
.image:hover p{
    transform: translateY(0);
    opacity: 1;
}
.image img{
    transform: scale(1);
    transition:  transform .5s ease-in-out;
}
.image:hover img{
    transform: scale(1.2);
}
.image::after{
    content: "";
    position: absolute;
    background-color: white;
    inset: 0;
    /*O inset em CSS é uma propriedade abreviada que combina quatro propriedades relacionadas ao posicionamento de um elemento: top, right, bottom e left. Ele define a distância do elemento em relação às suas bordas externas, facilitando a escrita e organização do código.*/
    opacity: .5;
    pointer-events: none;
    /*O pointer-events em CSS controla como os elementos respondem às interações do ponteiro (como cliques, toques ou movimentos do mouse). Ele pode habilitar ou desabilitar essas interações, além de modificar como os eventos de ponteiro são processados.
    Exemplos principais:
    pointer-events: none;

    Faz com que o elemento ignore todos os eventos do ponteiro. É como se o elemento não estivesse lá para cliques ou toques. Os eventos passam direto para o elemento abaixo dele.
    pointer-events: auto;

    Restaura o comportamento padrão, permitindo interações normais com o elemento.*/
    transform: scale(1);
    transition:  all .5s ease-in-out;
}
.image:hover::after{
    opacity: 0;
    transform: scale(.5);
}